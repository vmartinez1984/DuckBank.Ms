<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DuckBank.Api</name>
    </assembly>
    <members>
        <member name="T:DuckBank.Api.Controllers.AhorrosController">
            <summary>
            Ahorros
            </summary>
        </member>
        <member name="M:DuckBank.Api.Controllers.AhorrosController.#ctor(DuckBank.BusinessLayer.Bl.AhorroBl)">
            <summary>
            
            </summary>        
            <param name="repositorio"></param>
        </member>
        <member name="M:DuckBank.Api.Controllers.AhorrosController.Post(DuckBank.Core.Dtos.AhorroDtoIn)">
            <summary>
            Agregar ahorro
            </summary>
            <param name="ahorroDtoIn"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="201">Elemento creado</response>   
        </member>
        <member name="M:DuckBank.Api.Controllers.AhorrosController.Depositar(System.String,DuckBank.Core.Dtos.MovimientoDtoIn)">
            <summary>
            Depositar
            </summary>
            <param name="id"></param>
            <param name="movimiento"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="201">Elemento creado</response>   
        </member>
        <member name="M:DuckBank.Api.Controllers.AhorrosController.Retirar(System.String,DuckBank.Core.Dtos.MovimientoDtoIn)">
            <summary>
            Retirar
            </summary>
            <param name="id"></param>
            <param name="movimiento"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="201">Elemento creado</response> 
        </member>
        <member name="M:DuckBank.Api.Controllers.AhorrosController.Get(System.String)">
            <summary>
            Obtener ahorro por ahorroId
            </summary>
            <param name="ahorroId"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="404">Elemento no encontrado</response> 
        </member>
        <member name="M:DuckBank.Api.Controllers.AhorrosController.ObtenerMovimientosAsync(System.String)">
            <summary>
            
            </summary>
            <param name="ahorroId"></param>
            <returns></returns>
            <response code="200">Lista de movimientos</response>        
        </member>
        <member name="M:DuckBank.Api.Controllers.AhorrosController.ObtenerListaDeAhorrosPorClienteIdAsync(System.String)">
            <summary>
            Obtener lista de ahorros por cliente Id
            </summary>
            <param name="clienteId"></param>
            <returns></returns>
        </member>
        <member name="T:DuckBank.Api.Controllers.ClientesController">
            <summary>
            Controlador de clientes
            </summary>
        </member>
        <member name="M:DuckBank.Api.Controllers.ClientesController.#ctor(DuckBank.BusinessLayer.Bl.ClienteBl,Microsoft.Extensions.Logging.ILogger{DuckBank.Api.Controllers.ClientesController})">
            <summary>
            
            </summary>
            <param name="cliente"></param>
            <param name="logger"></param>
        </member>
        <member name="M:DuckBank.Api.Controllers.ClientesController.AgregarAsync(DuckBank.Core.Dtos.ClienteDtoIn)">
            <summary>
            Agregar clientes
            </summary>
            <param name="dto"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="201">Elemento creado</response>   
        </member>
        <member name="M:DuckBank.Api.Controllers.ClientesController.ObtenerPorIdEncodedKeyAsync(System.String)">
            <summary>
            Obtener por id o encodedKey
            </summary>
            <param name="id"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="404">Elemento no encontrado</response>  
        </member>
        <member name="M:DuckBank.Api.Controllers.ClientesController.ActualizarAsync(System.String,DuckBank.Core.Dtos.ClienteDtoIn)">
            <summary>
            Actualizar
            </summary>
            <param name="id"></param>
            <param name="cliente"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="404">Elemento no encontrado</response>
        </member>
        <member name="M:DuckBank.Api.Controllers.ClientesController.ObtenerPorCorreo(System.String)">
            <summary>
            Obtener cliente por correo
            </summary>
            <param name="correo"></param>
            <returns></returns>
            <response code="200">Elemento existente</response>
            <response code="404">Elemento no encontrado</response>
        </member>
        <member name="T:DuckBank.Api.Controllers.TestsController">
            <summary>
            Controller para pruebas
            </summary>
        </member>
        <member name="M:DuckBank.Api.Controllers.TestsController.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{DuckBank.Api.Controllers.TestsController})">
            <summary>
            Contructor
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
        </member>
        <member name="M:DuckBank.Api.Controllers.TestsController.Get">
            <summary>
            Obtiene el ambiente que tiene registrado en el appSettings
            </summary>
            <returns></returns>
        </member>
        <member name="M:DuckBank.Api.Controllers.TestsController.Delete(System.String)">
            <summary>
            Prueba para registrar errores
            </summary>
            <param name="error"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:DuckBank.Api.Controllers.TestsController.HolaMundo(System.String)">
            <summary>
            Hola mundo
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
